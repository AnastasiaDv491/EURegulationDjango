# Generated by Django 3.2.7 on 2023-07-05 09:45

import RiskconcileData.db.models.utils
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('region', models.CharField(max_length=32, null=True)),
                ('currency', models.CharField(max_length=3, null=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_index=True, default=RiskconcileData.db.models.utils.get_short_uuid, editable=False, max_length=32, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(db_index=True, max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                ('type', models.CharField(max_length=64, null=True)),
                ('industry', models.CharField(max_length=64, null=True)),
                ('sector', models.CharField(max_length=64, null=True)),
                ('factset_entity_id', models.CharField(max_length=16, null=True, unique=True)),
                ('lei_code', models.CharField(max_length=20, null=True)),
                ('institution_id', models.CharField(max_length=16, null=True)),
                ('nace_code', models.CharField(default=None, max_length=10, null=True)),
                ('country', models.ForeignKey(null=True, on_delete=models.SET('Country deleted'), to='db.country')),
            ],
        ),
        migrations.CreateModel(
            name='ValueChain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(max_length=32)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('revenue_pct', models.FloatField(null=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing', to='db.entity')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming', to='db.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SFDRMetrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField()),
                ('date_of_extraction', models.DateField()),
                ('revenue', models.FloatField(null=True)),
                ('GHG_scope_1', models.FloatField(null=True)),
                ('GHG_scope_2', models.FloatField(null=True)),
                ('GHG_scope_3_upstream', models.FloatField(null=True)),
                ('GHG_scope_3_downstream', models.FloatField(null=True)),
                ('revenue_from_fossil_fuels', models.BooleanField(null=True)),
                ('energy_consumption_non_renewable', models.FloatField(null=True)),
                ('energy_consumption_renewable', models.FloatField(null=True)),
                ('energy_production_non_renewable', models.FloatField(null=True)),
                ('energy_production_renewable', models.FloatField(null=True)),
                ('energy_production_other', models.FloatField(null=True)),
                ('revenue_from_high_impact_sectors', models.FloatField(null=True)),
                ('nutrients_organic_pollutants', models.FloatField(null=True)),
                ('acid_emissions_to_water', models.FloatField(null=True)),
                ('metal_emissions_to_water', models.FloatField(null=True)),
                ('pesticides_fertilizers', models.FloatField(null=True)),
                ('nuclear_waste', models.FloatField(null=True)),
                ('total_hazardous_waste', models.FloatField(null=True)),
                ('gender_pay_indicator', models.FloatField(null=True)),
                ('male_board_members', models.FloatField(null=True)),
                ('female_board_members', models.FloatField(null=True)),
                ('involved_controversial_weapons', models.BooleanField(null=True)),
                ('emissions_inorganic_pollutants', models.FloatField(null=True)),
                ('emissions_air_pollutants', models.FloatField(null=True)),
                ('ozone_depleting_substances', models.FloatField(null=True)),
                ('energy_consumption_diesel', models.FloatField(null=True)),
                ('energy_consumption_petrol', models.FloatField(null=True)),
                ('energy_consumption_lpg', models.FloatField(null=True)),
                ('energy_consumption_fuel_oil', models.FloatField(null=True)),
                ('energy_consumption_natural_gas', models.FloatField(null=True)),
                ('energy_consumption_coal', models.FloatField(null=True)),
                ('energy_consumption_light_fuel_oil', models.FloatField(null=True)),
                ('energy_consumption_heavy_fuel_oil', models.FloatField(null=True)),
                ('energy_consumption_kerosine', models.FloatField(null=True)),
                ('energy_consumption_liquified_natural_gas', models.FloatField(null=True)),
                ('energy_consumption_marine_fuel_oil', models.FloatField(null=True)),
                ('water_usage', models.FloatField(null=True)),
                ('revenue_from_chemical_production', models.BooleanField(null=True)),
                ('sustainable_agriculture_score', models.FloatField(null=True)),
                ('non_recycled_waste', models.FloatField(null=True)),
                ('ohs_governance_oversight_score', models.FloatField(null=True)),
                ('injury_frequency_employees', models.FloatField(null=True)),
                ('injury_frequency_contractors', models.FloatField(null=True)),
                ('injury_lost_time_employees', models.FloatField(null=True)),
                ('injury_lost_time_contractors', models.FloatField(null=True)),
                ('supplier_code_of_conduct', models.FloatField(null=True)),
                ('systems_and_procedures', models.FloatField(null=True)),
                ('whistleblower_protection', models.BooleanField(null=True)),
                ('ceo_to_employee_pay_ratio', models.FloatField(null=True)),
                ('commitment_to_respect_human_rights', models.BooleanField(null=True)),
                ('human_rights_assessment', models.FloatField(null=True)),
                ('corruption_and_bribery_score', models.FloatField(null=True)),
                ('environmental_weighted_disclosure_rate', models.FloatField(null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('isin', models.CharField(max_length=12, null=True, unique=True)),
                ('name', models.CharField(max_length=258)),
                ('type', models.CharField(max_length=32)),
                ('exchange', models.CharField(max_length=8, null=True)),
                ('currency', models.CharField(max_length=4, null=True)),
                ('fsym_id', models.CharField(max_length=16)),
                ('primary', models.BooleanField()),
                ('ticker', models.CharField(max_length=64, null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IncomeStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('date_of_extraction', models.DateField(auto_now=True)),
                ('frequency', models.CharField(max_length=3)),
                ('fiscal_end_date', models.DateField(db_index=True, null=True)),
                ('report_date', models.DateField(null=True)),
                ('eps_report_date', models.DateField(null=True)),
                ('update_status', models.CharField(max_length=1, null=True)),
                ('ff_cogs', models.FloatField(null=True)),
                ('ff_consol_net_inc', models.FloatField(null=True)),
                ('ff_div_pfd', models.FloatField(null=True)),
                ('ff_earn_perst', models.FloatField(null=True)),
                ('ff_ebit_oper', models.FloatField(null=True)),
                ('ff_ebitda_oper', models.FloatField(null=True)),
                ('ff_eq_aff_inc', models.FloatField(null=True)),
                ('ff_gross_inc', models.FloatField(null=True)),
                ('ff_inc_tax', models.FloatField(null=True)),
                ('ff_int_exp_net', models.FloatField(null=True)),
                ('ff_int_exp_tot', models.FloatField(null=True)),
                ('ff_min_int_exp', models.FloatField(null=True)),
                ('ff_net_inc', models.FloatField(null=True)),
                ('ff_net_inc_aft_xord', models.FloatField(null=True)),
                ('ff_net_inc_basic', models.FloatField(null=True)),
                ('ff_net_income', models.FloatField(null=True)),
                ('ff_non_oper_inc', models.FloatField(null=True)),
                ('ff_oper_inc', models.FloatField(null=True)),
                ('ff_ebit_oper_ps', models.FloatField(null=True)),
                ('ff_eps_basic', models.FloatField(null=True)),
                ('ff_eps_dil', models.FloatField(null=True)),
                ('ff_eps_dil_bef_unusual', models.FloatField(null=True)),
                ('ff_sales_ps', models.FloatField(null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FxPair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_index=True, default=RiskconcileData.db.models.utils.get_short_uuid, editable=False, max_length=32, null=True, unique=True)),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fxpairs_base', to='db.currency')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fxpairs_quote', to='db.currency')),
            ],
        ),
        migrations.CreateModel(
            name='FxHistoryRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_index=True, default=RiskconcileData.db.models.utils.get_short_uuid, editable=False, max_length=32, null=True, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('fx_pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.fxpair')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FxHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_index=True, default=RiskconcileData.db.models.utils.get_short_uuid, editable=False, max_length=32, null=True, unique=True)),
                ('date', models.DateField(db_index=True)),
                ('fx_rate', models.FloatField()),
                ('fx_pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='db.fxpair')),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='FinancialRatios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('date_of_extraction', models.DateField(auto_now=True)),
                ('frequency', models.CharField(max_length=3)),
                ('fiscal_end_date', models.DateField(db_index=True, null=True)),
                ('report_date', models.DateField(null=True)),
                ('eps_report_date', models.DateField(null=True)),
                ('update_status', models.CharField(max_length=1, null=True)),
                ('ff_asset_turn', models.FloatField(null=True)),
                ('ff_capex_sales', models.FloatField(null=True)),
                ('ff_com_eq_assets', models.FloatField(null=True)),
                ('ff_curr_ratio', models.FloatField(null=True)),
                ('ff_debt_assets', models.FloatField(null=True)),
                ('ff_debt_ebitda_oper', models.FloatField(null=True)),
                ('ff_div_yld', models.FloatField(null=True)),
                ('ff_div_yld_secs', models.FloatField(null=True)),
                ('ff_earn_yld', models.FloatField(null=True)),
                ('ff_entrpr_val', models.FloatField(null=True)),
                ('ff_gross_mgn', models.FloatField(null=True)),
                ('ff_int_mgn', models.FloatField(null=True)),
                ('ff_mkt_val', models.FloatField(null=True)),
                ('ff_net_mgn', models.FloatField(null=True)),
                ('ff_oper_mgn', models.FloatField(null=True)),
                ('ff_pay_out_ratio', models.FloatField(null=True)),
                ('ff_pbk', models.FloatField(null=True)),
                ('ff_pcf', models.FloatField(null=True)),
                ('ff_pe', models.FloatField(null=True)),
                ('ff_psales', models.FloatField(null=True)),
                ('ff_ptx_mgn', models.FloatField(null=True)),
                ('ff_quick_ratio', models.FloatField(null=True)),
                ('ff_roa', models.FloatField(null=True)),
                ('ff_roe', models.FloatField(null=True)),
                ('ff_rotc', models.FloatField(null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ESGMetrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField()),
                ('aspect', models.CharField(max_length=256)),
                ('score', models.FloatField()),
                ('weight', models.FloatField(null=True)),
                ('assessmenttype', models.CharField(max_length=256)),
                ('parentaspect', models.FloatField(null=True)),
                ('aspectid', models.FloatField(null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CashFlowStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('date_of_extraction', models.DateField(auto_now=True)),
                ('frequency', models.CharField(max_length=3)),
                ('fiscal_end_date', models.DateField(db_index=True, null=True)),
                ('report_date', models.DateField(null=True)),
                ('eps_report_date', models.DateField(null=True)),
                ('update_status', models.CharField(max_length=1, null=True)),
                ('ff_dep_chg_cf', models.FloatField(null=True)),
                ('ff_invest_activ_oth', models.FloatField(null=True)),
                ('ff_loan_chg_cf', models.FloatField(null=True)),
                ('ff_chg_cash_cf', models.FloatField(null=True)),
                ('ff_for_exch_cf', models.FloatField(null=True)),
                ('ff_misc_funds_cf', models.FloatField(null=True)),
                ('ff_debt_cf', models.FloatField(null=True)),
                ('ff_div_cf', models.FloatField(null=True)),
                ('ff_fin_activ_oth_cf', models.FloatField(null=True)),
                ('ff_fin_cf', models.FloatField(null=True)),
                ('ff_stk_chg_cf', models.FloatField(null=True)),
                ('ff_acq_bus_cf', models.FloatField(null=True)),
                ('ff_capex', models.FloatField(null=True)),
                ('ff_incr_fed_home_adv_cf', models.FloatField(null=True)),
                ('ff_invest_activ_cf', models.FloatField(null=True)),
                ('ff_invest_cf', models.FloatField(null=True)),
                ('ff_invest_purch_sale_cf', models.FloatField(null=True)),
                ('ff_invest_sources_cf', models.FloatField(null=True)),
                ('ff_invest_uses_cf', models.FloatField(null=True)),
                ('ff_sale_assets_bus_cf', models.FloatField(null=True)),
                ('ff_dep_exp_cf', models.FloatField(null=True)),
                ('ff_dfd_tax_cf', models.FloatField(null=True)),
                ('ff_funds_oper_gross', models.FloatField(null=True)),
                ('ff_net_inc_cf', models.FloatField(null=True)),
                ('ff_non_cash', models.FloatField(null=True)),
                ('ff_oper_cf', models.FloatField(null=True)),
                ('ff_wkcap_chg', models.FloatField(null=True)),
                ('ff_xord_cf', models.FloatField(null=True)),
                ('ff_curr_ps_cf', models.FloatField(null=True)),
                ('ff_dps', models.FloatField(null=True)),
                ('ff_free_cf', models.FloatField(null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BalanceSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('date_of_extraction', models.DateField(auto_now=True)),
                ('frequency', models.CharField(max_length=3)),
                ('fiscal_end_date', models.DateField(db_index=True, null=True)),
                ('report_date', models.DateField(null=True)),
                ('eps_report_date', models.DateField(null=True)),
                ('update_status', models.CharField(max_length=1, null=True)),
                ('ff_assets', models.FloatField(null=True)),
                ('ff_assets_curr', models.FloatField(null=True)),
                ('ff_assets_curr_oth', models.FloatField(null=True)),
                ('ff_assets_nonperf', models.FloatField(null=True)),
                ('ff_assets_oth', models.FloatField(null=True)),
                ('ff_cash_restr', models.FloatField(null=True)),
                ('ff_ppe_net', models.FloatField(null=True)),
                ('ff_int_pay', models.FloatField(null=True)),
                ('ff_liabs_curr', models.FloatField(null=True)),
                ('ff_liabs_curr_oth', models.FloatField(null=True)),
                ('ff_bps', models.FloatField(null=True)),
                ('ff_com_eq_retain_earn', models.FloatField(null=True)),
                ('ff_eq_tot', models.FloatField(null=True)),
                ('ff_pfd_stk', models.FloatField(null=True)),
                ('ff_shldrs_eq', models.FloatField(null=True)),
                ('ff_debt', models.FloatField(null=True)),
                ('ff_net_debt', models.FloatField(null=True)),
                ('ff_tcap', models.FloatField(null=True)),
                ('ff_tier1_cap', models.FloatField(null=True)),
                ('ff_tier2_cap', models.FloatField(null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='fxpair',
            index=models.Index(fields=['base', 'quote'], name='idx_fxpairs'),
        ),
        migrations.AlterUniqueTogether(
            name='fxhistory',
            unique_together={('fx_pair', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='entity',
            unique_together={('name', 'type')},
        ),
    ]
